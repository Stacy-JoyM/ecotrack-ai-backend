"""Initial migration without chat models

Revision ID: e477b0bfd369
Revises: 
Create Date: 2025-10-28 19:15:46.338431

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e477b0bfd369'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dashboard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('discovers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('address', sa.String(length=300), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('lifestyle_type', sa.String(length=50), nullable=True),
    sa.Column('carbon_goal', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=20), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('co2_emission', sa.Float(), nullable=True),
    sa.Column('emission_calculated', sa.Boolean(), nullable=True),
    sa.Column('activity_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('carbon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('transport', sa.Float(), nullable=False),
    sa.Column('energy', sa.Float(), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='unique_user_date')
    )
    with op.batch_alter_table('carbon', schema=None) as batch_op:
        batch_op.create_index('idx_user_date', ['user_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_carbon_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_carbon_user_id'), ['user_id'], unique=False)

    op.create_table('goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('goal_type', sa.String(length=20), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_achieved', sa.Boolean(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('achieved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('goals', schema=None) as batch_op:
        batch_op.create_index('idx_goal_type', ['goal_type'], unique=False)
        batch_op.create_index('idx_user_active', ['user_id', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_goals_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_goals_start_date'), ['start_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_goals_user_id'), ['user_id'], unique=False)

    op.create_table('energy_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('energy_type', sa.String(length=50), nullable=False),
    sa.Column('usage_kwh', sa.Float(), nullable=False),
    sa.Column('duration_hours', sa.Float(), nullable=True),
    sa.Column('appliance_name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transport_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vehicle_type', sa.String(length=20), nullable=False),
    sa.Column('distance', sa.Float(), nullable=False),
    sa.Column('vehicle_model', sa.String(length=100), nullable=True),
    sa.Column('fuel_efficiency', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transport_activities')
    op.drop_table('energy_activities')
    with op.batch_alter_table('goals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_goals_user_id'))
        batch_op.drop_index(batch_op.f('ix_goals_start_date'))
        batch_op.drop_index(batch_op.f('ix_goals_is_active'))
        batch_op.drop_index('idx_user_active')
        batch_op.drop_index('idx_goal_type')

    op.drop_table('goals')
    with op.batch_alter_table('carbon', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_carbon_user_id'))
        batch_op.drop_index(batch_op.f('ix_carbon_date'))
        batch_op.drop_index('idx_user_date')

    op.drop_table('carbon')
    op.drop_table('activities')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('discovers')
    op.drop_table('dashboard')
    # ### end Alembic commands ###
